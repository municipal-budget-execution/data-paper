"\\\\",
"  Controls                          & No                              & Yes \\\\  ",
"  Year Fixed Effects                & No                               & Yes\\\\  ",
"  State Fixed Effects               & No                               & Yes \\\\  ",
"\\midrule \\midrule",
table_a1[18:length(table_a1)]
)
pdf_table(table_a1, file.path(graph_output, "table_reg.tex"))
}
{
outcomes <-
for(var in outcomes)
reg_models <- list()
# 1 model - only controls
reg_models[[1]] <- log(gdp) ~ wavg_delay
# 2 model - controls + time FEs
reg_models[[2]] <- log(gdp) ~ wavg_delay + population| state + year
# list of regression results
reg_results <- list()
# Loop over each model
for (reg in seq(1, length(reg_models))) {
reg_results[[reg]] <- fixest::feols(reg_models[[reg]], data = data_reg)
}
fixest::setFixest_etable(digits.stats = 2,
drop = c("population", "Constant"))
table_a1 <- fixest::etable(reg_results,
fitstat = c("n",
"my",
"rmse",
"r2",
"ar2"
),
digits = 3,
tex = TRUE,
dict=c("wavg_delay" = "Average Payment Delay",
"log(gdp)"   = "Log(GDP)"))
table_a1 <- c(table_a1[1:10],
"\\\\",
"  Controls                          & No                              & Yes \\\\  ",
"  Year Fixed Effects                & No                               & Yes\\\\  ",
"  State Fixed Effects               & No                               & Yes \\\\  ",
"\\midrule \\midrule",
table_a1[18:length(table_a1)]
)
pdf_table(table_a1, file.path(graph_output, "table_reg.tex"))
}
{
# List of variables to loop over
variables <- c("wavg_delay", "over_30days", "over_45days", "over_60days")
# Create lists to store models and results
reg_models <- list()
reg_results <- list()
# Loop over each variable
for (outcome in variables) {
# 1 model - only controls
reg_models[[1]] <- as.formula(paste0("log(gdp) ~ ", outcome))
# 2 model - controls + time FEs
reg_models[[2]] <- as.formula(paste0("log(gdp) ~ ", outcome, " + population | state + year"))
# Run regression for each model
for (reg in seq(1, length(reg_models))) {
reg_results[[reg]] <- fixest::feols(reg_models[[reg]], data = data_reg)
}
# Update dict for variable names and descriptions
dict <- c("wavg_delay" = "Average Payment Delay",
"over_30days" = "Delay Over 30 Days",
"over_45days" = "Delay Over 45 Days",
"over_60days" = "Delay Over 60 Days",
"log(gdp)" = "Log(GDP)")
fixest::setFixest_etable(digits.stats = 2,
drop = c("%population", "Constant"))
table_a1 <- fixest::etable(reg_results,
fitstat = c("n",
"my",
"rmse",
"r2",
"ar2"
),
digits = 3,
tex = TRUE,
dict=dict)
table_a1 <- c(table_a1[1:10],
"\\\\",
"  Controls                          & No                              & Yes \\\\  ",
"  Year Fixed Effects                & No                               & Yes\\\\  ",
"  State Fixed Effects               & No                               & Yes \\\\  ",
"\\midrule \\midrule",
table_a1[18:length(table_a1)]
)
pdf_table(table_a1, file_name = file.path(graph_output, paste0("table_reg_", outcome, ".tex")))
}
}
}
# ---------------------------------------------------------------------------- #
#                              Brazil Budget Execution Project                 #
#                                   World Bank - DIME                          #
#                                                                              #
# ---------------------------------------------------------------------------- #
# 0: Load the data ----
{
# We load the data
# dataset at the municipality-by-year level, and it includes three main sets of variables:
# 1) measures of payment delay for procurement (avg delay, % above 30 days, % above 60 days...);
# 2) measures of how our aggregates of budget activities (e.g. commitments or payments) deviate from a Treasury database from Brazil -- these are to assess the quality of our data;
# 3) municipality fixed characteristics such as population, per capita gdp, ...
data_munic = fread(file.path(raw_data, "budget_execution_index.csv"),
showProgress = TRUE,
encoding = "Latin-1")
}
{
{ # We create the binned scatter plot
# Truncate the sample at 100 days
data_reg = data_munic[wavg_delay > 100, wavg_delay := 100]
# estimate OLS
lm_fit = summary(lm(wavg_delay ~ log(gdp), data = data_reg))
# create bins for the graph
data_plot = data_reg[, bins := cut(wavg_delay, seq(0, 100, by = 2), labels = FALSE)]
# collapse data at the bin level
data_plot = data_plot[, .(wavg_delay = mean(wavg_delay, na.rm = TRUE), gdp = mean(gdp, na.rm = TRUE)), .(bins)]
# plot
plot <- ggplot(data = data_plot, mapping = aes(x = wavg_delay, y = log(gdp))) +
geom_point(size = 3) +
geom_smooth(method = lm, se = FALSE, color = "black", alpha = 0.1) +
scale_x_continuous(
"Average Payment Delay",
breaks = seq(0, 100, by = 10), limits = c(0, 105)) +
ggtitle("Log GDP") +
coord_cartesian(expand = FALSE, clip = 'off')+
scale_y_continuous(
"",
limits = c(16, 22),
breaks = seq(0, 21, by = 1)) +
set_theme(
axis_line_x = element_line(),
axis_line_y = element_line()
) +
labs(caption = str_wrap("Note: this figure presents a binned scatter plot of log of GDP on the y-axis against average payment delays on the x-axis. I truncate the sample at 100 days; the bandwith is 2 days.", 100)) +
geom_richtext(x = 95, y = 21.5, label = paste0(
round(lm_fit[["coefficients"]][2, 1], 3), ifelse(lm_fit[["coefficients"]][2, 4] < 0.001, "<sup>***</sup>",
ifelse(lm_fit[["coefficients"]][2, 4] < 0.01, "<sup>**</sup>",
ifelse(lm_fit[["coefficients"]][2, 4] < 0.1, "<sup>*</sup>", ""))), " <br> (", round(lm_fit[["coefficients"]][2, 2], 3), ")"
), family = "LM Roman 10", label.color = NA, size = 6)
ggsave(
filename = file.path(graph_output, "scatter_plot.jpeg"),
plot                                        ,
width    = 14.14                                   ,
height   = 8.51                                    ,
dpi      = 400                                     ,
units    = "in"                                    ,
device   = 'jpeg'
)
}
{
reg_models <- list()
# 1 model - only controls
reg_models[[1]] <- log(gdp) ~ wavg_delay
# 2 model - controls + time FEs
reg_models[[2]] <- log(gdp) ~ wavg_delay + population| state + year
# list of regression results
reg_results <- list()
# Loop over each model
for (reg in seq(1, length(reg_models))) {
reg_results[[reg]] <- fixest::feols(reg_models[[reg]], data = data_reg)
}
fixest::setFixest_etable(digits.stats = 2,
drop = c("population", "Constant"))
table_a1 <- fixest::etable(reg_results,
fitstat = c("n",
"my",
"rmse",
"r2",
"ar2"
),
digits = 3,
tex = TRUE,
dict=c("wavg_delay" = "Average Payment Delay",
"log(gdp)"   = "Log(GDP)"))
table_a1 <- c(table_a1[1:10],
"\\\\",
"  Controls                          & No                              & Yes \\\\  ",
"  Year Fixed Effects                & No                               & Yes\\\\  ",
"  State Fixed Effects               & No                               & Yes \\\\  ",
"\\midrule \\midrule",
table_a1[18:length(table_a1)]
)
pdf_table(table_a1, file.path(graph_output, "table_reg.tex"))
}
{
# List of variables to loop over
variables <- c("wavg_delay", "over_30days", "over_45days", "over_60days")
# Create lists to store models and results
reg_models <- list()
reg_results <- list()
# Loop over each variable
for (outcome in variables) {
# 1 model - only controls
reg_models[[1]] <- as.formula(paste0("log(gdp) ~ ", outcome))
# 2 model - controls + time FEs
reg_models[[2]] <- as.formula(paste0("log(gdp) ~ ", outcome, " + population | state + year"))
# Run regression for each model
for (reg in seq(1, length(reg_models))) {
reg_results[[reg]] <- fixest::feols(reg_models[[reg]], data = data_reg)
}
# Update dict for variable names and descriptions
dict <- c("wavg_delay" = "Average Payment Delay",
"over_30days" = "Delay Over 30 Days",
"over_45days" = "Delay Over 45 Days",
"over_60days" = "Delay Over 60 Days",
"log(gdp)" = "Log(GDP)")
fixest::setFixest_etable(digits.stats = 2,
drop = c("%population", "Constant"))
table_a1 <- fixest::etable(reg_results,
fitstat = c("n",
"my",
"rmse",
"r2",
"ar2"
),
digits = 3,
tex = TRUE,
dict=dict)
table_a1 <- c(table_a1[1:10],
"\\\\",
"  Controls                          & No                              & Yes \\\\  ",
"  Year Fixed Effects                & No                               & Yes\\\\  ",
"  State Fixed Effects               & No                               & Yes \\\\  ",
"\\midrule \\midrule",
table_a1[18:length(table_a1)]
)
pdf_table(table_a1, file_name = file.path(graph_output, paste0("table_reg_", outcome, ".tex")))
}
}
}
# ---------------------------------------------------------------------------- #
#                              Brazil Budget Execution Project                 #
#                                   World Bank - DIME                          #
#                                                                              #
# ---------------------------------------------------------------------------- #
# 0: Load the data ----
{
# We load the data
# dataset at the municipality-by-year level, and it includes three main sets of variables:
# 1) measures of payment delay for procurement (avg delay, % above 30 days, % above 60 days...);
# 2) measures of how our aggregates of budget activities (e.g. commitments or payments) deviate from a Treasury database from Brazil -- these are to assess the quality of our data;
# 3) municipality fixed characteristics such as population, per capita gdp, ...
data_munic = fread(file.path(raw_data, "budget_execution_index.csv"),
showProgress = TRUE,
encoding = "Latin-1")
}
{
{ # We create the binned scatter plot
# Truncate the sample at 100 days
data_reg = data_munic[wavg_delay > 100, wavg_delay := 100]
# estimate OLS
lm_fit = summary(lm(wavg_delay ~ log(gdp), data = data_reg))
# create bins for the graph
data_plot = data_reg[, bins := cut(wavg_delay, seq(0, 100, by = 2), labels = FALSE)]
# collapse data at the bin level
data_plot = data_plot[, .(wavg_delay = mean(wavg_delay, na.rm = TRUE), gdp = mean(gdp, na.rm = TRUE)), .(bins)]
# plot
plot <- ggplot(data = data_plot, mapping = aes(x = wavg_delay, y = log(gdp))) +
geom_point(size = 3) +
geom_smooth(method = lm, se = FALSE, color = "black", alpha = 0.1) +
scale_x_continuous(
"Average Payment Delay",
breaks = seq(0, 100, by = 10), limits = c(0, 105)) +
ggtitle("Log GDP") +
coord_cartesian(expand = FALSE, clip = 'off')+
scale_y_continuous(
"",
limits = c(16, 22),
breaks = seq(0, 21, by = 1)) +
set_theme(
axis_line_x = element_line(),
axis_line_y = element_line()
) +
labs(caption = str_wrap("Note: this figure presents a binned scatter plot of log of GDP on the y-axis against average payment delays on the x-axis. I truncate the sample at 100 days; the bandwith is 2 days.", 100)) +
geom_richtext(x = 95, y = 21.5, label = paste0(
round(lm_fit[["coefficients"]][2, 1], 3), ifelse(lm_fit[["coefficients"]][2, 4] < 0.001, "<sup>***</sup>",
ifelse(lm_fit[["coefficients"]][2, 4] < 0.01, "<sup>**</sup>",
ifelse(lm_fit[["coefficients"]][2, 4] < 0.1, "<sup>*</sup>", ""))), " <br> (", round(lm_fit[["coefficients"]][2, 2], 3), ")"
), family = "LM Roman 10", label.color = NA, size = 6)
ggsave(
filename = file.path(graph_output, "scatter_plot.jpeg"),
plot                                        ,
width    = 14.14                                   ,
height   = 8.51                                    ,
dpi      = 400                                     ,
units    = "in"                                    ,
device   = 'jpeg'
)
}
{
reg_models <- list()
# 1 model - only controls
reg_models[[1]] <- log(gdp) ~ wavg_delay
# 2 model - controls + time FEs
reg_models[[2]] <- log(gdp) ~ wavg_delay + population| state + year
# list of regression results
reg_results <- list()
# Loop over each model
for (reg in seq(1, length(reg_models))) {
reg_results[[reg]] <- fixest::feols(reg_models[[reg]], data = data_reg)
}
fixest::setFixest_etable(digits.stats = 2,
drop = c("population", "Constant"))
table_a1 <- fixest::etable(reg_results,
fitstat = c("n",
"my",
"rmse",
"r2",
"ar2"
),
digits = 3,
tex = TRUE,
dict=c("wavg_delay" = "Average Payment Delay",
"log(gdp)"   = "Log(GDP)"))
table_a1 <- c(table_a1[1:10],
"\\\\",
"  Controls                          & No                              & Yes \\\\  ",
"  Year Fixed Effects                & No                               & Yes\\\\  ",
"  State Fixed Effects               & No                               & Yes \\\\  ",
"\\midrule \\midrule",
table_a1[18:length(table_a1)]
)
pdf_table(table_a1, file.path(graph_output, "table_reg.tex"))
}
{
# List of variables to loop over
variables <- c("wavg_delay", "over_30days", "over_45days", "over_60days")
# Create lists to store models and results
reg_models <- list()
reg_results <- list()
# Loop over each variable
for (outcome in variables) {
# 1 model - only controls
reg_models[[1]] <- as.formula(paste0("log(gdp) ~ ", outcome))
# 2 model - controls + time FEs
reg_models[[2]] <- as.formula(paste0("log(gdp) ~ ", outcome, " + population | state + year"))
# Run regression for each model
for (reg in seq(1, length(reg_models))) {
reg_results[[reg]] <- fixest::feols(reg_models[[reg]], data = data_reg)
}
# Update dict for variable names and descriptions
dict <- c("wavg_delay" = "Average Payment Delay",
"over_30days" = "Delay Over 30 Days",
"over_45days" = "Delay Over 45 Days",
"over_60days" = "Delay Over 60 Days",
"log(gdp)" = "Log(GDP)")
fixest::setFixest_etable(digits.stats = 2,
drop = c("%population", "Constant"))
table_a1 <- fixest::etable(reg_results,
fitstat = c("n",
"my",
"rmse",
"r2",
"ar2"
),
digits = 3,
tex = TRUE,
dict=dict)
table_a1 <- c(table_a1[1:10],
"\\\\",
"  Controls                          & No                              & Yes \\\\  ",
"  Year Fixed Effects                & No                               & Yes\\\\  ",
"  State Fixed Effects               & No                               & Yes \\\\  ",
"\\midrule \\midrule",
table_a1[18:length(table_a1)]
)
pdf_table(table_a1, file_name = file.path(graph_output, paste0("table_reg_", outcome, ".tex")))
}
}
}
# ---------------------------------------------------------------------------- #
#                              Brazil Budget Execution Project                 #
#                                   World Bank - DIME                          #
#                                                                              #
# ---------------------------------------------------------------------------- #
# 0: Load the data ----
{
# We load the data
# dataset at the municipality-by-year level, and it includes three main sets of variables:
# 1) measures of payment delay for procurement (avg delay, % above 30 days, % above 60 days...);
# 2) measures of how our aggregates of budget activities (e.g. commitments or payments) deviate from a Treasury database from Brazil -- these are to assess the quality of our data;
# 3) municipality fixed characteristics such as population, per capita gdp, ...
data_munic = fread(file.path(raw_data, "budget_execution_index.csv"),
showProgress = TRUE,
encoding = "Latin-1")
}
{
{ # We create the binned scatter plot
# Truncate the sample at 100 days
data_reg = data_munic[wavg_delay > 100, wavg_delay := 100]
# estimate OLS
lm_fit = summary(lm(wavg_delay ~ log(gdp), data = data_reg))
# create bins for the graph
data_plot = data_reg[, bins := cut(wavg_delay, seq(0, 100, by = 2), labels = FALSE)]
# collapse data at the bin level
data_plot = data_plot[, .(wavg_delay = mean(wavg_delay, na.rm = TRUE), gdp = mean(gdp, na.rm = TRUE)), .(bins)]
# plot
plot <- ggplot(data = data_plot, mapping = aes(x = wavg_delay, y = log(gdp))) +
geom_point(size = 3) +
geom_smooth(method = lm, se = FALSE, color = "black", alpha = 0.1) +
scale_x_continuous(
"Average Payment Delay",
breaks = seq(0, 100, by = 10), limits = c(0, 105)) +
ggtitle("Log GDP") +
coord_cartesian(expand = FALSE, clip = 'off')+
scale_y_continuous(
"",
limits = c(16, 22),
breaks = seq(0, 21, by = 1)) +
set_theme(
axis_line_x = element_line(),
axis_line_y = element_line()
) +
labs(caption = str_wrap("Note: this figure presents a binned scatter plot of log of GDP on the y-axis against average payment delays on the x-axis. I truncate the sample at 100 days; the bandwith is 2 days.", 100)) +
geom_richtext(x = 95, y = 21.5, label = paste0(
round(lm_fit[["coefficients"]][2, 1], 3), ifelse(lm_fit[["coefficients"]][2, 4] < 0.001, "<sup>***</sup>",
ifelse(lm_fit[["coefficients"]][2, 4] < 0.01, "<sup>**</sup>",
ifelse(lm_fit[["coefficients"]][2, 4] < 0.1, "<sup>*</sup>", ""))), " <br> (", round(lm_fit[["coefficients"]][2, 2], 3), ")"
), family = "LM Roman 10", label.color = NA, size = 6)
ggsave(
filename = file.path(graph_output, "scatter_plot.jpeg"),
plot                                        ,
width    = 14.14                                   ,
height   = 8.51                                    ,
dpi      = 400                                     ,
units    = "in"                                    ,
device   = 'jpeg'
)
}
{
reg_models <- list()
# 1 model - only controls
reg_models[[1]] <- log(gdp) ~ wavg_delay
# 2 model - controls + time FEs
reg_models[[2]] <- log(gdp) ~ wavg_delay + population| state + year
# list of regression results
reg_results <- list()
# Loop over each model
for (reg in seq(1, length(reg_models))) {
reg_results[[reg]] <- fixest::feols(reg_models[[reg]], data = data_reg)
}
fixest::setFixest_etable(digits.stats = 2,
drop = c("population", "Constant"))
table_a1 <- fixest::etable(reg_results,
fitstat = c("n",
"my",
"rmse",
"r2",
"ar2"
),
digits = 3,
tex = TRUE,
dict=c("wavg_delay" = "Average Payment Delay",
"log(gdp)"   = "Log(GDP)"))
table_a1 <- c(table_a1[1:10],
"\\\\",
"  Controls                          & No                              & Yes \\\\  ",
"  Year Fixed Effects                & No                               & Yes\\\\  ",
"  State Fixed Effects               & No                               & Yes \\\\  ",
"\\midrule \\midrule",
table_a1[18:length(table_a1)]
)
pdf_table(table_a1, file.path(graph_output, "table_reg.tex"))
}
{
# List of variables to loop over
variables <- c("wavg_delay", "over_30days", "over_45days", "over_60days")
# Create lists to store models and results
reg_models <- list()
reg_results <- list()
# Loop over each variable
for (outcome in variables) {
# 1 model - only controls
reg_models[[1]] <- as.formula(paste0("log(gdp) ~ ", outcome, " + log(population)"))
# 2 model - controls + time FEs
reg_models[[2]] <- as.formula(paste0("log(gdp) ~ ", outcome, " + log(population) | state + year"))
# Run regression for each model
for (reg in seq(1, length(reg_models))) {
reg_results[[reg]] <- fixest::feols(reg_models[[reg]], data = data_reg)
}
# Update dict for variable names and descriptions
dict <- c("wavg_delay" = "Average Payment Delay",
"over_30days" = "Delay Over 30 Days",
"over_45days" = "Delay Over 45 Days",
"over_60days" = "Delay Over 60 Days",
"log(gdp)" = "Log(GDP)",
"log(population)" = "Log(Population)")
fixest::setFixest_etable(digits.stats = 2,
drop = c("Constant"))
table_a1 <- fixest::etable(reg_results,
fitstat = c("n",
"my",
"rmse",
"r2",
"ar2"
),
digits = 3,
tex = TRUE,
dict=dict)
table_a1 <- c(table_a1[1:10],
"\\\\",
"  Year Fixed Effects                & No                               & Yes\\\\  ",
"  State Fixed Effects               & No                               & Yes \\\\  ",
"\\midrule \\midrule",
table_a1[18:length(table_a1)]
)
pdf_table(table_a1, file_name = file.path(graph_output, paste0("table_reg_", outcome, ".tex")))
}
}
}
